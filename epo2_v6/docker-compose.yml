version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-javainit:/docker-entrypoint-initdb.d
    networks:
      - backend

  springboot:
    build: .
    container_name: springboot-app
    restart: always
    ports:
      - "${SPRING_PORT}:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
    depends_on:
      - mysql
      - api-flask
    networks:
      - backend

  mysql-flask:
    image: mysql:8.0
    container_name: mysql-flask-container
    ports:
      - "${FLASK_PORT}:3306"  # Flask usa puerto 3308 desde fuera
    environment:
      MYSQL_DATABASE: ${FLASK_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_flask_data:/var/lib/mysql
      - ./mysql-pythoninit:/docker-entrypoint-initdb.d
    networks:
      - backend

  api-flask:
    build: ./api-flask
    container_name: flask-api-container
    ports:
      - "${FLASK_API_PORT}:5000"
    depends_on:
      - mysql-flask
    networks:
      - backend

volumes:
  mysql_data:
  mysql_flask_data:

networks:
  backend:
